digraph G {
  "Ordered Mon" [shape="rect"]
  "Ordered Semiring" [shape="rect"]
  {
    rank="same"
    "Ordered Mon"
    "Ordered Semiring"
  }
  {
    rank="same"
    "Ordered List"
    "Ordered Integers"
  }
  "Z/2Z" [peripheries="2"]
  "Z/2Z" -> "`0" [dir="back"]
  "Z/2Z" -> "`1" [dir="back"]

  "Ordered List" [peripheries="2"]
  "Ordered Mon" -> "Ordered List" [dir="back"]
  "Ordered List" -> "[]" [dir="back"]
  "Ordered List" -> "[1]" [dir="back"]
  "Ordered List" -> "[2]" [dir="back"]
  "Ordered List" -> "[3]" [dir="back"]
  "Ordered List" -> "[4]" [dir="back"]
  "Ordered List" -> "[1, 2]" [dir="back"]
  "Ordered List" -> "[2, 1]" [dir="back"]
  "Ordered List" -> "[1, 3]" [dir="back"]
  "Ordered List" -> "[3, 1]" [dir="back"]
  "Ordered List" -> "[1, 4]" [dir="back"]
  "Ordered List" -> "[4, 1]" [dir="back"]
  "Ordered List" -> "[2, 3]" [dir="back"]
  "Ordered List" -> "[3, 2]" [dir="back"]
  "Ordered List" -> "[2, 4]" [dir="back"]
  "Ordered List" -> "[4, 2]" [dir="back"]
  "Ordered List" -> "[3, 4]" [dir="back"]
  "Ordered List" -> "[4, 3]" [dir="back"]
  "Ordered List" -> "[1. 2]" [dir="back"]
  "Ordered List" -> "[1, 2, 3]" [dir="back"]
  "Ordered List" -> "[1, 3, 2]" [dir="back"]
  "Ordered List" -> "[2, 1, 3]" [dir="back"]
  "Ordered List" -> "[2, 3, 1]" [dir="back"]
  "Ordered List" -> "[3, 1, 2]" [dir="back"]
  "Ordered List" -> "[3, 2, 1]" [dir="back"]
  "Ordered List" -> "[1. 2, 3]" [dir="back"]
  "Ordered List" -> "[1. 2, 3, 4]" [dir="back"]
  "Ordered List" -> "[1, 2, 4, 3]" [dir="back"]
  "Ordered List" -> "[1, 3, 2, 4]" [dir="back"]
  "Ordered List" -> "[1, 3, 4, 2]" [dir="back"]
  "Ordered List" -> "[1, 4, 2, 3]" [dir="back"]
  "Ordered List" -> "[1, 4, 3, 2]" [dir="back"]
  "Ordered List" -> "[2, 1, 3, 4]" [dir="back"]
  "Ordered List" -> "[2, 1, 4, 3]" [dir="back"]
  "Ordered List" -> "[2, 3, 1, 4]" [dir="back"]
  "Ordered List" -> "[2, 3, 4, 1]" [dir="back"]
  "Ordered List" -> "[2, 4, 1, 3]" [dir="back"]
  "Ordered List" -> "[2, 4, 3, 1]" [dir="back"]
  "Ordered List" -> "[3, 1, 2, 4]" [dir="back"]
  "Ordered List" -> "[3, 1, 4, 2]" [dir="back"]
  "Ordered List" -> "[3, 2, 1, 4]" [dir="back"]
  "Ordered List" -> "[3, 2, 4, 1]" [dir="back"]
  "Ordered List" -> "[3, 4, 1, 2]" [dir="back"]
  "Ordered List" -> "[3, 4, 2, 1]" [dir="back"]
  "Ordered List" -> "[4, 1, 2, 3]" [dir="back"]
  "Ordered List" -> "[4, 1, 3, 2]" [dir="back"]
  "Ordered List" -> "[4, 2, 1, 3]" [dir="back"]
  "Ordered List" -> "[4, 2, 3, 1]" [dir="back"]
  "Ordered List" -> "[4, 3, 1, 2]" [dir="back"]
  "Ordered List" -> "[4, 3, 2, 1]" [dir="back"]

  // sort
  "sort" [shape="none"]
  "[4, 2, 1, 3]" -> "sort" [arrowhead="none"]
  "sort" -> "[1, 2, 3, 4]"
  "[4, 2]" -> "sort" [arrowhead="none" color="green"]
  "sort" -> "[2, 4]" [color="green"]
  "[1, 3]" -> "sort" [arrowhead="none" color="red"]
  "sort" -> "[1, 3]" [color="red"]
  "[]" -> "[1]"
  "[]" -> "[2]"
  "[]" -> "[3]"
  "[]" -> "[4]"
  "[1]" -> "[1, 2]"
  "[2]" -> "[1, 2]"
  "[1]" -> "[2, 1]"
  "[2]" -> "[2, 1]"
  "[1]" -> "[3, 1]"
  "[3]" -> "[3, 1]"
  "[1]" -> "[1, 3]"
  "[3]" -> "[1, 3]"
  "[1]" -> "[4, 1]"
  "[4]" -> "[4, 1]"
  "[1]" -> "[1, 4]"
  "[4]" -> "[1, 4]"
  "[2]" -> "[2, 3]"
  "[3]" -> "[2, 3]"
  "[2]" -> "[3, 2]"
  "[3]" -> "[3, 2]"
  "[2]" -> "[2, 4]"
  "[4]" -> "[2, 4]"
  "[2]" -> "[4, 2]"
  "[4]" -> "[4, 2]"
  "[3]" -> "[3, 4]"
  "[4]" -> "[3, 4]"
  "[3]" -> "[4, 3]"
  "[4]" -> "[4, 3]"
  {
    rank="same"
    "[1]"
    "[2]"
    "[3]"
    "[4]"
  }
  {
    rank="same"
    "[1, 2]"
    "[2, 1]"
    "[1, 3]"
    "[3, 1]"
    "[1, 4]"
    "[4, 1]"
    "[2, 3]"
    "[3, 2]"
    "[2, 4]"
    "[4, 2]"
    "[3, 4]"
    "[4, 3]"
  }
  {
    rank="same"
    "[1, 2, 3]"
    "[1, 3, 2]"
    "[2, 1, 3]"
    "[2, 3, 1]"
    "[3, 1, 2]"
    "[3, 2, 1]"
  }
  {
    rank="same"
    "[1. 2, 3, 4]"
    "[1, 2, 4, 3]"
    "[1, 3, 2, 4]"
    "[1, 3, 4, 2]"
    "[1, 4, 2, 3]"
    "[1, 4, 3, 2]"
    "[2, 1, 3, 4]"
    "[2, 1, 4, 3]"
    "[2, 3, 1, 4]"
    "[2, 3, 4, 1]"
    "[2, 4, 1, 3]"
    "[2, 4, 3, 1]"
    "[3, 1, 2, 4]"
    "[3, 1, 4, 2]"
    "[3, 2, 1, 4]"
    "[3, 2, 4, 1]"
    "[3, 4, 1, 2]"
    "[3, 4, 2, 1]"
    "[4, 1, 2, 3]"
    "[4, 1, 3, 2]"
    "[4, 2, 1, 3]"
    "[4, 2, 3, 1]"
    "[4, 3, 1, 2]"
    "[4, 3, 2, 1]"
  }
  "1" -> "`1" [label="≤ 1"]
  "1" -> "`1" [label="≤ 2"]
  "1" -> "`1" [label="≤ 3"]
  "1" -> "`1" [label="≤ 4"]

  "sort" -> "merge sort" [style="dotted"]
  "[4, 2, 1, 3]" -> "merge sort"
  "merge sort" -> "merge sort([4, 2, 1, 3])"
  "merge sort([4, 2, 1, 3])" -> "merge sort([4, 2])"
  "merge sort([4, 2, 1, 3])" -> "merge sort([1, 3])"
  "merge sort([4, 2])" -> "[4]"
  "merge sort([4, 2])" -> "[2]"
  "merge sort([1, 3])" -> "[1]"
  "merge sort([1, 3])" -> "[3]"
  "[4]" -> "4"
  "[2]" -> "2"
  "[1]" -> "1"
  "[3]" -> "3"

  "4" -> "[4]" [label="unit"]
  "2" -> "[2]" [label="unit"]
  "1" -> "[1]" [label="unit"]
  "3" -> "[3]" [label="unit"]

  "Ordered Semiring" -> "Ordered Integers" [dir="back"]
  "Ordered Integers" [peripheries="2"]
  "Ordered Integers" -> "1" [dir="back"]
  "Ordered Integers" -> "2" [dir="back"]
  "Ordered Integers" -> "3" [dir="back"]
  "Ordered Integers" -> "4" [dir="back"]
  "≤" [shape="none"]
  "4" -> "≤" [arrowhead="none"]
  "≤" -> "2"
  "4" -> "[2, 4]"
  "2" -> "[2, 4]"
  "1" -> "[1, 3]"
  "3" -> "[1, 3]"
  "1" -> "2" [label="≤"]
  "2" -> "3" [label="≤"]
  "3" -> "4" [label="≤"]

  "1 ≤ 1" -> "`1" [label="="]
  "1 ≤ 2" -> "`1" [label="="]
  "1 ≤ 3" -> "`1" [label="="]
  "1 ≤ 4" -> "`1" [label="="]
  "2 ≤ 1" -> "`0" [label="="]
  "2 ≤ 2" -> "`1" [label="="]
  "2 ≤ 3" -> "`1" [label="="]
  "2 ≤ 4" -> "`1" [label="="]
  "3 ≤ 1" -> "`0" [label="="]
  "3 ≤ 2" -> "`0" [label="="]
  "3 ≤ 3" -> "`1" [label="="]
  "3 ≤ 4" -> "`1" [label="="]
  "4 ≤ 1" -> "`0" [label="="]
  "4 ≤ 2" -> "`0" [label="="]
  "4 ≤ 3" -> "`0" [label="="]
  "4 ≤ 4" -> "`1" [label="="]

  "concat" [shape="none"]
  "[2, 4]" -> "concat [1, 3]" [arrowhead="none"]
  "concat" -> "[1, 3]"
  "[2, 4]" -> "1 ≤ 2"
  "[1, 3]" -> "1 ≤ 2"
  "[2, 4]" -> "1 ≤ 4"
  "[1, 3]" -> "1 ≤ 4"
  "[2, 4]" -> "3 ≤ 2"
  "[1, 3]" -> "3 ≤ 2"
  "[2, 4]" -> "3 ≤ 4"
  "[1, 3]" -> "3 ≤ 4"
  "1 ≤ 2"
  "1 ≤ 4"
  "3 ≤ 2"
  "3 ≤ 4"
  "1 ≤ 2" -> "[1]"
  "1 ≤ 4" -> "[1]"
  "1 ≤ 2" -> "[1, 2]"
  "3 ≤ 2" -> "[1, 2]"
  "3 ≤ 4" -> "[1, 2, 3]"
  "3 ≤ 4" -> "[1, 2, 3, 4]"
  {
    rank="same"
    "[2, 4]"
    "concat"
    "[1, 3]"
  }

  "1" -> "≤" [arrowhead="none"]
  "≤" -> "3"

  // search
  "4" -> "binary search"
  "[1, 2, 3, 4]" -> "binary search"
  "binary search" -> "3"
}